{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyDigitalSchool\\\\TP_CSS\\\\tp-sass\\\\sass-tp\\\\src\\\\components\\\\header.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DateTime } from 'luxon';\nimport '../css/Header.css';\nimport '../style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [formattedDate, setFormattedDate] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const onClick = () => {\n    setIsOpen(!isOpen);\n  };\n  useEffect(() => {\n    const blurElement = document.querySelector('.blur');\n    const menuButton = document.querySelector('.hamburger-menu');\n    menuButton.addEventListener('click', () => {\n      blurElement.classList.toggle('open', isOpen);\n    });\n\n    // Nettoyer l'écouteur d'événements lors du démontage du composant\n    return () => {\n      menuButton.removeEventListener('click', () => {\n        blurElement.classList.toggle('open', isOpen);\n      });\n    };\n  }, [isOpen]);\n\n  // // Ajoutez la fonction handleMenuToggle ici\n  // const handleMenuToggle = () => {\n  //     setIsOpen(!isOpen);\n  //     document.documentElement.classList.toggle('menu-open', isOpen);\n  // };\n\n  // const handleServiceClick = () => {\n  //     // Traitez la navigation ou l'action pour le lien \"Services\"\n  //     // Vous pouvez utiliser react-router-dom ou une autre méthode de navigation\n  //     console.log('Services clicked');\n  //     setIsOpen(false); // Fermer le menu après le clic\n  // };\n\n  // const handleAdminClick = () => {\n  //     // Traitez la navigation ou l'action pour le lien \"Administrateur\"\n  //     // Vous pouvez utiliser react-router-dom ou une autre méthode de navigation\n  //     console.log('Administrateur clicked');\n  //     setIsOpen(false); // Fermer le menu après le clic\n  // };\n\n  useEffect(() => {\n    // Obtenir la date actuelle avec Luxon\n    const now = DateTime.local();\n\n    // Formater la date en utilisant toLocaleString\n    const formatted = now.toLocaleString({\n      weekday: 'long',\n      // Jour de la semaine (complet)\n      day: 'numeric',\n      // Jour du mois\n      month: 'short' // Mois (abrégé)\n    });\n\n    // Mettre à jour l'état avec la date formatée\n    setFormattedDate(formatted);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blur\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"date\",\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `hamburger-menu ${isOpen ? 'open' : ''}`,\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line line-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line line-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"menu\",\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        class: \"Service\",\n        children: \"Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        class: \"administrateur\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"31\",\n          height: \"25\",\n          viewBox: \"0 0 31 25\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M30.1427 13.2373L24.5675 11.0396C24.3677 10.96 23.9562 10.8562 23.4898 11.0396L17.9122 13.2373C17.3891 13.4375 17.05 13.9209 17.05 14.4092C17.05 19.8584 20.3801 23.6279 23.4873 24.8535C23.9536 25.0366 24.3592 24.9329 24.5651 24.8535C27.0475 23.9209 31 20.5322 31 14.4092C31 13.9209 30.6609 13.4375 30.1427 13.2373ZM24.025 22.5781V13.3398L28.6508 15.165C28.3795 19.4238 25.7009 21.7773 24.025 22.5781ZM10.85 12.5C14.2745 12.5 17.05 9.70166 17.05 6.25C17.05 2.79834 14.2745 0 10.85 0C7.42547 0 4.65 2.79834 4.65 6.25C4.65 9.70166 7.42547 12.5 10.85 12.5ZM15.5291 15.1514C14.817 14.9561 14.0759 14.8438 13.3058 14.8438H8.39422C3.75923 14.8438 0 18.6377 0 23.3105C0 24.2432 0.75175 25 1.67884 25H20.0192C20.1715 25 20.3082 24.951 20.4484 24.9126C17.9073 22.9395 15.6986 19.5459 15.5291 15.1514Z\",\n            fill: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 48\n        }, this), \"Administrateur\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"LxfpfkT0VXu+Ajj7b1H11FnOVxs=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","DateTime","jsxDEV","_jsxDEV","Header","_s","formattedDate","setFormattedDate","isOpen","setIsOpen","onClick","blurElement","document","querySelector","menuButton","addEventListener","classList","toggle","removeEventListener","now","local","formatted","toLocaleString","weekday","day","month","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","width","height","viewBox","fill","xmlns","d","_c","$RefreshReg$"],"sources":["D:/MyDigitalSchool/TP_CSS/tp-sass/sass-tp/src/components/header.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport '../css/Header.css';\r\nimport '../style.scss';\r\n\r\nconst Header = () => {\r\n    const [formattedDate, setFormattedDate] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const onClick = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const blurElement = document.querySelector('.blur');\r\n        const menuButton = document.querySelector('.hamburger-menu');\r\n\r\n        menuButton.addEventListener('click', () => {\r\n            blurElement.classList.toggle('open', isOpen);\r\n        });\r\n\r\n        // Nettoyer l'écouteur d'événements lors du démontage du composant\r\n        return () => {\r\n            menuButton.removeEventListener('click', () => {\r\n                blurElement.classList.toggle('open', isOpen);\r\n            });\r\n        };\r\n    }, [isOpen]);\r\n\r\n    // // Ajoutez la fonction handleMenuToggle ici\r\n    // const handleMenuToggle = () => {\r\n    //     setIsOpen(!isOpen);\r\n    //     document.documentElement.classList.toggle('menu-open', isOpen);\r\n    // };\r\n\r\n    // const handleServiceClick = () => {\r\n    //     // Traitez la navigation ou l'action pour le lien \"Services\"\r\n    //     // Vous pouvez utiliser react-router-dom ou une autre méthode de navigation\r\n    //     console.log('Services clicked');\r\n    //     setIsOpen(false); // Fermer le menu après le clic\r\n    // };\r\n\r\n    // const handleAdminClick = () => {\r\n    //     // Traitez la navigation ou l'action pour le lien \"Administrateur\"\r\n    //     // Vous pouvez utiliser react-router-dom ou une autre méthode de navigation\r\n    //     console.log('Administrateur clicked');\r\n    //     setIsOpen(false); // Fermer le menu après le clic\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // Obtenir la date actuelle avec Luxon\r\n        const now = DateTime.local();\r\n\r\n        // Formater la date en utilisant toLocaleString\r\n        const formatted = now.toLocaleString({\r\n            weekday: 'long', // Jour de la semaine (complet)\r\n            day: 'numeric', // Jour du mois\r\n            month: 'short', // Mois (abrégé)\r\n        });\r\n\r\n        // Mettre à jour l'état avec la date formatée\r\n        setFormattedDate(formatted);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"blur\">\r\n                <h1 className=\"date\">{formattedDate}</h1>\r\n            </div>\r\n            <div className={`hamburger-menu ${isOpen ? 'open' : ''}`} onClick={onClick}>\r\n                <span className=\"line line-1\"></span>\r\n                <span className=\"line line-2\"></span>\r\n            </div>\r\n            {isOpen && (\r\n\r\n                <div class=\"menu\" className=\"menu\">\r\n                    <div class=\"svg\">\r\n                        \r\n                        </div>\r\n                    <a class=\"Service\">\r\n                         Service</a>\r\n                    <a class=\"administrateur\"> <svg width=\"31\" height=\"25\" viewBox=\"0 0 31 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M30.1427 13.2373L24.5675 11.0396C24.3677 10.96 23.9562 10.8562 23.4898 11.0396L17.9122 13.2373C17.3891 13.4375 17.05 13.9209 17.05 14.4092C17.05 19.8584 20.3801 23.6279 23.4873 24.8535C23.9536 25.0366 24.3592 24.9329 24.5651 24.8535C27.0475 23.9209 31 20.5322 31 14.4092C31 13.9209 30.6609 13.4375 30.1427 13.2373ZM24.025 22.5781V13.3398L28.6508 15.165C28.3795 19.4238 25.7009 21.7773 24.025 22.5781ZM10.85 12.5C14.2745 12.5 17.05 9.70166 17.05 6.25C17.05 2.79834 14.2745 0 10.85 0C7.42547 0 4.65 2.79834 4.65 6.25C4.65 9.70166 7.42547 12.5 10.85 12.5ZM15.5291 15.1514C14.817 14.9561 14.0759 14.8438 13.3058 14.8438H8.39422C3.75923 14.8438 0 18.6377 0 23.3105C0 24.2432 0.75175 25 1.67884 25H20.0192C20.1715 25 20.3082 24.951 20.4484 24.9126C17.9073 22.9395 15.6986 19.5459 15.5291 15.1514Z\" fill=\"black\" />\r\n                    </svg>\r\n                        Administrateur</a>\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}