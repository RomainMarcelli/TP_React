{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyDigitalSchool\\\\TP_CSS\\\\tp-sass\\\\sass-tp\\\\src\\\\components\\\\header.js\",\n  _s = $RefreshSig$();\n// /components/header.js\n\nimport React, { useEffect, useState } from 'react';\nimport { DateTime } from 'luxon';\nimport '../index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [formattedDate, setFormattedDate] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const onClick = () => {\n    setIsOpen(!isOpen);\n  };\n  useEffect(() => {\n    const blurElement = document.querySelector('.blur');\n    const menuButton = document.querySelector('.hamburger-menu');\n    menuButton.addEventListener('click', () => {\n      blurElement.classList.toggle('open', isOpen);\n    });\n    return () => {\n      menuButton.removeEventListener('click', () => {\n        blurElement.classList.toggle('open', isOpen);\n      });\n    };\n  }, [isOpen]);\n  useEffect(() => {\n    const now = DateTime.local();\n    const formatted = now.toLocaleString({\n      weekday: 'long',\n      // Jour de la semaine (complet)\n      day: 'numeric',\n      // Jour du mois\n      month: 'short' // Mois (abrégé)\n    });\n\n    // Mettre à jour l'état avec la date formatée\n    setFormattedDate(formatted);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blur\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"date\",\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Titre page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"LxfpfkT0VXu+Ajj7b1H11FnOVxs=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","DateTime","jsxDEV","_jsxDEV","Header","_s","formattedDate","setFormattedDate","isOpen","setIsOpen","onClick","blurElement","document","querySelector","menuButton","addEventListener","classList","toggle","removeEventListener","now","local","formatted","toLocaleString","weekday","day","month","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MyDigitalSchool/TP_CSS/tp-sass/sass-tp/src/components/header.js"],"sourcesContent":["// /components/header.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport '../index.scss';\r\n\r\nconst Header = () => {\r\n    const [formattedDate, setFormattedDate] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const onClick = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const blurElement = document.querySelector('.blur');\r\n        const menuButton = document.querySelector('.hamburger-menu');\r\n\r\n        menuButton.addEventListener('click', () => {\r\n            blurElement.classList.toggle('open', isOpen);\r\n        });\r\n\r\n        return () => {\r\n            menuButton.removeEventListener('click', () => {\r\n                blurElement.classList.toggle('open', isOpen);\r\n            });\r\n        };\r\n    }, [isOpen]);\r\n\r\n\r\n    useEffect(() => {\r\n        const now = DateTime.local();\r\n\r\n        const formatted = now.toLocaleString({\r\n            weekday: 'long', // Jour de la semaine (complet)\r\n            day: 'numeric', // Jour du mois\r\n            month: 'short', // Mois (abrégé)\r\n        });\r\n\r\n        // Mettre à jour l'état avec la date formatée\r\n        setFormattedDate(formatted);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"blur\">\r\n                <h1 className=\"date\">{formattedDate}</h1>\r\n                <h1>Titre page</h1>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMU,OAAO,GAAGA,CAAA,KAAM;IAClBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IACnD,MAAMC,UAAU,GAAGF,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;IAE5DC,UAAU,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM;MACvCJ,WAAW,CAACK,SAAS,CAACC,MAAM,CAAC,MAAM,EAAET,MAAM,CAAC;IAChD,CAAC,CAAC;IAEF,OAAO,MAAM;MACTM,UAAU,CAACI,mBAAmB,CAAC,OAAO,EAAE,MAAM;QAC1CP,WAAW,CAACK,SAAS,CAACC,MAAM,CAAC,MAAM,EAAET,MAAM,CAAC;MAChD,CAAC,CAAC;IACN,CAAC;EACL,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAGZT,SAAS,CAAC,MAAM;IACZ,MAAMoB,GAAG,GAAGlB,QAAQ,CAACmB,KAAK,CAAC,CAAC;IAE5B,MAAMC,SAAS,GAAGF,GAAG,CAACG,cAAc,CAAC;MACjCC,OAAO,EAAE,MAAM;MAAE;MACjBC,GAAG,EAAE,SAAS;MAAE;MAChBC,KAAK,EAAE,OAAO,CAAE;IACpB,CAAC,CAAC;;IAEF;IACAlB,gBAAgB,CAACc,SAAS,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIlB,OAAA;IAAKuB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnBxB,OAAA;MAAKuB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBxB,OAAA;QAAIuB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAErB;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzC5B,OAAA;QAAAwB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA9CID,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}