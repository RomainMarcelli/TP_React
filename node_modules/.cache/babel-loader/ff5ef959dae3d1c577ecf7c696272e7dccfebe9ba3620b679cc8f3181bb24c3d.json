{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyDigitalSchool\\\\TP_CSS\\\\tp-sass\\\\sass-tp\\\\src\\\\components\\\\header.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DateTime } from 'luxon';\nimport '../css/Header.css';\nimport '../style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [formattedDate, setFormattedDate] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const onClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // Ajoutez la fonction handleMenuToggle ici\n  const handleMenuToggle = () => {\n    setIsOpen(!isOpen);\n    document.documentElement.classList.toggle('menu-open', isOpen);\n  };\n  const handleServiceClick = () => {\n    // Traitez la navigation ou l'action pour le lien \"Services\"\n    // Vous pouvez utiliser react-router-dom ou une autre méthode de navigation\n    console.log('Services clicked');\n    setIsOpen(false); // Fermer le menu après le clic\n  };\n  const handleAdminClick = () => {\n    // Traitez la navigation ou l'action pour le lien \"Administrateur\"\n    // Vous pouvez utiliser react-router-dom ou une autre méthode de navigation\n    console.log('Administrateur clicked');\n    setIsOpen(false); // Fermer le menu après le clic\n  };\n  useEffect(() => {\n    // Obtenir la date actuelle avec Luxon\n    const now = DateTime.local();\n\n    // Formater la date en utilisant toLocaleString\n    const formatted = now.toLocaleString({\n      weekday: 'long',\n      // Jour de la semaine (complet)\n      day: 'numeric',\n      // Jour du mois\n      month: 'short' // Mois (abrégé)\n    });\n\n    // Mettre à jour l'état avec la date formatée\n    setFormattedDate(formatted);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"date\",\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `hamburger-menu ${isOpen ? 'open' : ''}`,\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line line-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line line-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"9tD8BmxbulA2zM3T87RVl8lDIZE=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","DateTime","jsxDEV","_jsxDEV","Header","_s","formattedDate","setFormattedDate","isOpen","setIsOpen","onClick","handleMenuToggle","document","documentElement","classList","toggle","handleServiceClick","console","log","handleAdminClick","now","local","formatted","toLocaleString","weekday","day","month","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MyDigitalSchool/TP_CSS/tp-sass/sass-tp/src/components/header.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport '../css/Header.css';\r\nimport '../style.scss';\r\n\r\nconst Header = () => {\r\n    const [formattedDate, setFormattedDate] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const onClick = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n\r\n    // Ajoutez la fonction handleMenuToggle ici\r\n    const handleMenuToggle = () => {\r\n        setIsOpen(!isOpen);\r\n        document.documentElement.classList.toggle('menu-open', isOpen);\r\n    };\r\n\r\n    const handleServiceClick = () => {\r\n        // Traitez la navigation ou l'action pour le lien \"Services\"\r\n        // Vous pouvez utiliser react-router-dom ou une autre méthode de navigation\r\n        console.log('Services clicked');\r\n        setIsOpen(false); // Fermer le menu après le clic\r\n    };\r\n\r\n    const handleAdminClick = () => {\r\n        // Traitez la navigation ou l'action pour le lien \"Administrateur\"\r\n        // Vous pouvez utiliser react-router-dom ou une autre méthode de navigation\r\n        console.log('Administrateur clicked');\r\n        setIsOpen(false); // Fermer le menu après le clic\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Obtenir la date actuelle avec Luxon\r\n        const now = DateTime.local();\r\n\r\n        // Formater la date en utilisant toLocaleString\r\n        const formatted = now.toLocaleString({\r\n            weekday: 'long', // Jour de la semaine (complet)\r\n            day: 'numeric', // Jour du mois\r\n            month: 'short', // Mois (abrégé)\r\n        });\r\n\r\n        // Mettre à jour l'état avec la date formatée\r\n        setFormattedDate(formatted);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <h1 className=\"date\">{formattedDate}</h1>\r\n            <div className={`hamburger-menu ${isOpen ? 'open' : ''}`} onClick={onClick}>\r\n                <span className=\"line line-1\"></span>\r\n                <span className=\"line line-2\"></span>\r\n            </div>\r\n            {isOpen && (\r\n                <div className=\"menu\">\r\n                    <p></p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,mBAAmB;AAC1B,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMU,OAAO,GAAGA,CAAA,KAAM;IAClBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;;EAGD;EACA,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC3BF,SAAS,CAAC,CAACD,MAAM,CAAC;IAClBI,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEP,MAAM,CAAC;EAClE,CAAC;EAED,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC7B;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BT,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC3B;IACA;IACAF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCT,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZ;IACA,MAAMqB,GAAG,GAAGnB,QAAQ,CAACoB,KAAK,CAAC,CAAC;;IAE5B;IACA,MAAMC,SAAS,GAAGF,GAAG,CAACG,cAAc,CAAC;MACjCC,OAAO,EAAE,MAAM;MAAE;MACjBC,GAAG,EAAE,SAAS;MAAE;MAChBC,KAAK,EAAE,OAAO,CAAE;IACpB,CAAC,CAAC;;IAEF;IACAnB,gBAAgB,CAACe,SAAS,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACInB,OAAA;IAAKwB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnBzB,OAAA;MAAIwB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEtB;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzC7B,OAAA;MAAKwB,SAAS,EAAG,kBAAiBnB,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;MAACE,OAAO,EAAEA,OAAQ;MAAAkB,QAAA,gBACvEzB,OAAA;QAAMwB,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrC7B,OAAA;QAAMwB,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACLxB,MAAM,iBACHL,OAAA;MAAKwB,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBzB,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC3B,EAAA,CA1DID,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AA4DZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}