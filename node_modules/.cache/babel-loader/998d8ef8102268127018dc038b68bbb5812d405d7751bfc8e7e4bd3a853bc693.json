{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyDigitalSchool\\\\TP_CSS\\\\tp-sass\\\\sass-tp\\\\src\\\\components\\\\header.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DateTime } from 'luxon';\nimport '../css/Header.css';\nimport '../style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [formattedDate, setFormattedDate] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const onClick = () => {\n    // Logique pour gérer le clic du menu hamburger\n    setIsOpen(!isOpen);\n  };\n  useEffect(() => {\n    // Obtenir la date actuelle avec Luxon\n    const now = DateTime.local();\n\n    // Formater la date en utilisant toLocaleString\n    const formatted = now.toLocaleString({\n      weekday: 'long',\n      // Jour de la semaine (complet)\n      day: 'numeric',\n      // Jour du mois\n      month: 'short' // Mois (abrégé)\n    });\n\n    // Mettre à jour l'état avec la date formatée\n    setFormattedDate(formatted);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"date\",\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"\",\n      className: `hamburger-menu ${isOpen ? 'open' : ''}`,\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line line-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line line-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_s(Header, \"9tD8BmxbulA2zM3T87RVl8lDIZE=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","DateTime","jsxDEV","_jsxDEV","Header","_s","formattedDate","setFormattedDate","isOpen","setIsOpen","onClick","now","local","formatted","toLocaleString","weekday","day","month","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MyDigitalSchool/TP_CSS/tp-sass/sass-tp/src/components/header.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport '../css/Header.css';\r\nimport '../style.scss'\r\n\r\nconst Header = () => {\r\n    const [formattedDate, setFormattedDate] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n  \r\n    const onClick = () => {\r\n      // Logique pour gérer le clic du menu hamburger\r\n      setIsOpen(!isOpen);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      // Obtenir la date actuelle avec Luxon\r\n      const now = DateTime.local();\r\n  \r\n      // Formater la date en utilisant toLocaleString\r\n      const formatted = now.toLocaleString({\r\n        weekday: 'long', // Jour de la semaine (complet)\r\n        day: 'numeric', // Jour du mois\r\n        month: 'short', // Mois (abrégé)\r\n      });\r\n  \r\n      // Mettre à jour l'état avec la date formatée\r\n      setFormattedDate(formatted);\r\n    }, []);\r\n  \r\n    return (\r\n      <div className=\"header\">\r\n        <h1 class='date'>{formattedDate}</h1>\r\n        {/* Autres éléments du header */}\r\n        <div class=\"\" className={`hamburger-menu ${isOpen ? 'open' : ''}`} onClick={onClick}>\r\n          <span className=\"line line-1\"></span>\r\n          <span className=\"line line-2\"></span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Header;\r\n  \r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,mBAAmB;AAC1B,OAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMU,OAAO,GAAGA,CAAA,KAAM;IACpB;IACAD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAEDT,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,GAAG,GAAGV,QAAQ,CAACW,KAAK,CAAC,CAAC;;IAE5B;IACA,MAAMC,SAAS,GAAGF,GAAG,CAACG,cAAc,CAAC;MACnCC,OAAO,EAAE,MAAM;MAAE;MACjBC,GAAG,EAAE,SAAS;MAAE;MAChBC,KAAK,EAAE,OAAO,CAAE;IAClB,CAAC,CAAC;;IAEF;IACAV,gBAAgB,CAACM,SAAS,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAKe,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBhB,OAAA;MAAIiB,KAAK,EAAC,MAAM;MAAAD,QAAA,EAAEb;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAErCrB,OAAA;MAAKiB,KAAK,EAAC,EAAE;MAACF,SAAS,EAAG,kBAAiBV,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;MAACE,OAAO,EAAEA,OAAQ;MAAAS,QAAA,gBAClFhB,OAAA;QAAMe,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCrB,OAAA;QAAMe,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAlCED,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AAoCV,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}